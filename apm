#!/usr/bin/python3
import subprocess
import sys
if subprocess.getoutput("locale") == 'LANG=cs_CZ.UTF-8\nLC_CTYPE="cs_CZ.UTF-8"\nLC_NUMERIC="cs_CZ.UTF-8"\nLC_TIME="cs_CZ.UTF-8"\nLC_COLLATE="cs_CZ.UTF-8"\nLC_MONETARY="cs_CZ.UTF-8"\nLC_MESSAGES="cs_CZ.UTF-8"\nLC_PAPER="cs_CZ.UTF-8"\nLC_NAME="cs_CZ.UTF-8"\nLC_ADDRESS="cs_CZ.UTF-8"\nLC_TELEPHONE="cs_CZ.UTF-8"\nLC_MEASUREMENT="cs_CZ.UTF-8"\nLC_IDENTIFICATION="cs_CZ.UTF-8"\nLC_ALL=':
    sys.path.append('/app')
    from translations.cs import *
else:
    sys.path.append('/app')
    from translations.en import *

import json
import os
import argparse
from urllib.request import urlopen
from tabulate import tabulate

apmcli = argparse.ArgumentParser()
apmcli.add_argument("-install", help=help_install_appimages, type=str)
apmcli.add_argument("-remove", help=help_uninstall_appimages, type=str)
apmcli.add_argument("-seeall", help=help_see_all_appimages, action="store_true")
apmcli.add_argument("-search", help=help_search_appimages, type=str)
apmcli.add_argument("-run", help=help_run_appimages, type=str)

u = urlopen("https://raw.githubusercontent.com/vikdevelop/apm/main/appimages.json")
jsonObject = json.load(u)

args = apmcli.parse_args()
HOME = os.path.expanduser('~')

if args.install in jsonObject:
    if os.path.exists("%s/.AppImage/" % HOME + args.install + ".AppImage"):
        print(package + args.install + appimage_installed_status)
    else:
        print('\033[1m' + installation_appimage_title + '\033[0m')
        installdata = [
        [args.install, "@latest", jsonObject[args.install]],
        ]

        head = [name_tab, version_tab, source_tab]

        print(tabulate(installdata, headers=head))
        dialog = input(continue_input + " [Y/n]: ")
        if dialog == 'n':
            print(canceled)
            exit()
        if dialog == 'y' or 'Y':
            print(downloading_status + args.install)
            os.chdir('%s/.var/app/com.github.vikdevelop.apm/cache/tmp' % HOME)
            os.system("wget -c %s > /dev/null 2>&1" % jsonObject[args.install])
            if not os.path.exists("%s/.AppImage" % HOME):
                os.mkdir("%s/.AppImage" % HOME)
            print(installing_text + args.install + to_text + '$HOME/.AppImage')
            os.system("mv *.AppImage $HOME/.AppImage/" + args.install + ".AppImage")
            os.system("chmod +x $HOME/.AppImage/" + args.install + ".AppImage")
            print(creating_moving_text + args.install + to_text + ' $HOME/.local/share/applications/')
            with open('%s/.local/share/applications/' % HOME + args.install + '.desktop', 'w') as desktop:
                desktop.write("[Desktop Entry]\n")
                desktop.write("Type=Application\n")
                desktop.write("Name=" + args.install + "\n")
                desktop.write("Comment=AppImage of " + args.install + "\n")
                desktop.write("Icon=AppImage\n")
                desktop.write("Exec=%s/.AppImage/" % HOME + args.install + ".AppImage\n")
                desktop.write("Terminal=false\n")
                desktop.write("Categories=System;System-Tools;")
            print('\033[92m' + done_text + '\033[0m')

if args.remove in jsonObject:
    if not os.path.exists("%s/.AppImage/" % HOME + args.remove + ".AppImage"):
        print(package + args.remove + package_is_not_installed + args.remove + type_apm_help)
        exit()
    else:
        print(chacking_installation_status + args.remove + " ...")
    size = os.path.getsize("%s/.AppImage/" % HOME + args.remove + ".AppImage") >> 20
    print('\033[1m' + uninstallation_appimage + '\033[0m')
    rmdata = [
    [args.remove, "%s MB" % size, "$HOME/.AppImage/" + args.remove + ".AppImage"],
    ]
 
    # create header
    head = [name_tab, size_tab, path_tab]
     
    # display table
    print(tabulate(rmdata, headers=head))
    rm = input(continue_input + " [Y/n]: ")
    if rm == 'n':
        print(canceled)
        exit()
    if rm == 'Y' or 'y':
        print(removing_text + " " + args.remove + from_dir_text + ' $HOME/.AppImage')
        os.remove(os.path.expanduser('~/.AppImage/') + args.remove + ".AppImage")
        print(removing_text + desktop_file + args.remove + from_dir_text + '$HOME/.local/share/applications/')
        os.remove('%s/.local/share/applications/' % HOME + args.remove + '.desktop')
        print('\033[92m' + done_text + '\033[0m')

if args.search in jsonObject:
    print('\033[1m' + search_results + '\033[0m')
    searchdata = [args.search, "@latest", "@appimages.json"],
 
    # create header
    head = [name_tab, version_tab, repofile_tab]
     
    # display table
    print(tabulate(searchdata, headers=head))
    
if args.run:
    print('\033[1m' + '$ ~/.AppImage/' + args.run + '.AppImage' + '\033[0m')
    os.system("$HOME/.AppImage/" + args.run + ".AppImage")

if args.seeall:
    print(installed_appimages_text)
    os.system("ls $HOME/.AppImage")
